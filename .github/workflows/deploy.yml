# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Deploy to production
on:
  push:
    branches: [ "master"]
jobs:
  deploy:
    name: Build image
    runs-on: ubuntu-latest

    steps:
    - name: Free up disk space
      run: |
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/ghc
        docker system prune -af
        sudo apt-get clean
    - name: Clean up Docker disk space
      run: |
        echo "ðŸ§¹ Cleaning up old Docker containers, images, and volumes..."
        # Stop and remove all stopped containers
        docker container prune -f
        # Remove all unused images (dangling and unreferenced)
        docker image prune -a -f
        # Remove all unused networks
        docker network prune -f
        # Remove all unused volumes
        docker volume prune -f
        echo "âœ… Docker cleanup completed."

    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Install kubectl
      uses: azure/setup-kubectl@v4
      with:
        version: 'v1.33.2' 
      id: install  

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
      with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-3 

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Load secrets from AWS Secrets Manager and load them into the environment
      run: aws secretsmanager get-secret-value --secret-id bank_system --query SecretString --output text | jq -r 'to_entries|map("\(.key)=\(.value)")|.[]' > app.env

    - name: Build, tag, and push docker image to Amazon ECR
      env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: hennge-one
          IMAGE_TAG: ${{ github.sha }}
      run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -t $REGISTRY/$REPOSITORY:latest .
          docker push -a $REGISTRY/$REPOSITORY
          
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          cd ~/myapp
          bash ./updatecontainer.sh
          